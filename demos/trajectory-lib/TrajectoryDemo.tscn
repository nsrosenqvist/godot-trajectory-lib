[gd_scene load_steps=20 format=2]

[ext_resource path="res://demos/trajectory-lib/default_env.tres" type="Environment" id=1]
[ext_resource path="res://demos/trajectory-lib/TrajectoryDemo.gd" type="Script" id=2]
[ext_resource path="res://demos/trajectory-lib/crosshair026.png" type="Texture" id=3]

[sub_resource type="SpatialMaterial" id=1]
albedo_color = Color( 0, 1, 0.415686, 1 )

[sub_resource type="PlaneMesh" id=2]
material = SubResource( 1 )
size = Vector2( 100, 100 )

[sub_resource type="BoxShape" id=3]
extents = Vector3( 200, 1, 200 )

[sub_resource type="SpatialMaterial" id=4]
albedo_color = Color( 0, 0.764706, 1, 1 )

[sub_resource type="CapsuleMesh" id=5]
material = SubResource( 4 )
radius = 0.5
radial_segments = 12
rings = 2

[sub_resource type="SpatialMaterial" id=6]
albedo_color = Color( 1, 0.32549, 0.32549, 1 )

[sub_resource type="SphereMesh" id=7]
material = SubResource( 6 )
radial_segments = 12
rings = 4

[sub_resource type="Animation" id=8]
resource_name = "Patrol"
length = 8.0
loop = true
tracks/0/type = "transform"
tracks/0/path = NodePath(".")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = PoolRealArray( 0, 1, -10, 1, -10, 0, 0, 0, 1, 1, 1, 1, 4, 1, 10, 1, -10, 0, 0, 0, 1, 1, 1, 1, 8, 1, -10, 1, -10, 0, 0, 0, 1, 1, 1, 1 )

[sub_resource type="SphereShape" id=12]

[sub_resource type="Shader" id=16]
code = "shader_type spatial;
render_mode unshaded, cull_disabled, depth_draw_opaque;

uniform float size = 1.0;
uniform float width = 0.1;
uniform vec4 inner_color: hint_color = vec4(1.0, 1.0, 0.0, 0.5);
uniform vec4 outer_color: hint_color = vec4(1.0, 1.0, 0.0, 0.5);

void fragment() {
	ALPHA = 0.0;
	vec2 center = vec2(0.5);
	float d = distance(UV, center);
	float h = size * 0.5;
	float l = h - (width * 0.5);
	if (d <= h && d > l) {
		vec4 color = mix(inner_color, outer_color, smoothstep(l, h, d));
		ALPHA = color.a;
		ALBEDO = color.rgb;
	}
}"

[sub_resource type="ShaderMaterial" id=13]
shader = SubResource( 16 )
shader_param/size = 1.0
shader_param/width = 0.1
shader_param/inner_color = Color( 1, 1, 0, 0.5 )
shader_param/outer_color = Color( 1, 1, 0, 0.5 )

[sub_resource type="PlaneMesh" id=11]
material = SubResource( 13 )
size = Vector2( 10, 10 )

[sub_resource type="Shader" id=9]
code = "shader_type spatial;
render_mode unshaded, cull_disabled, depth_draw_opaque;

uniform float size = 1.0;
uniform float width = 0.3;
uniform vec4 inner_color: hint_color = vec4(1.0, 0.0, 0.0, 0.5);
uniform vec4 outer_color: hint_color = vec4(1.0, 0.0, 0.0, 0.5);

void fragment() {
	ALPHA = 0.0;
	vec2 center = vec2(0.5);
	float d = distance(UV, center);
	float h = size * 0.5;
	float l = h - (width * 0.5);
	if (d <= h && d > l) {
		vec4 color = mix(inner_color, outer_color, smoothstep(l, h, d));
		ALPHA = color.a;
		ALBEDO = color.rgb;
	}
}"

[sub_resource type="ShaderMaterial" id=14]
shader = SubResource( 9 )
shader_param/size = 1.0
shader_param/width = 0.3
shader_param/inner_color = Color( 1, 0, 0, 0.870588 )
shader_param/outer_color = Color( 1, 0, 0, 0.87451 )

[sub_resource type="PlaneMesh" id=15]
material = SubResource( 14 )
size = Vector2( 3, 3 )

[sub_resource type="BoxShape" id=17]
extents = Vector3( 50, 50, 50 )

[node name="Spatial" type="Spatial"]
script = ExtResource( 2 )

[node name="UI" type="Control" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Views" type="Panel" parent="UI"]
margin_top = 52.0
margin_right = 261.0
margin_bottom = 113.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ProjectileSpeedLabel" type="Label" parent="UI/Views"]
margin_left = 8.0
margin_top = 10.0
margin_right = 112.0
margin_bottom = 24.0
text = "Speed"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ProjectileSpeedHSlider" type="HSlider" parent="UI/Views"]
margin_left = 109.0
margin_top = 10.0
margin_right = 252.0
margin_bottom = 26.0
min_value = 3.0
max_value = 20.0
step = 0.1
value = 11.5
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Range" type="Control" parent="UI/Views"]
margin_left = 8.0
margin_top = 35.0
margin_right = 48.0
margin_bottom = 75.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="InitialHeightLabel" type="Label" parent="UI/Views/Range"]
margin_top = 1.0
margin_right = 81.0
margin_bottom = 15.0
text = "Initial height"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="InitialHeightHSlider" type="HSlider" parent="UI/Views/Range"]
margin_left = 101.0
margin_top = 1.0
margin_right = 244.0
margin_bottom = 17.0
max_value = 10.0
step = 0.1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Fixed" type="Control" parent="UI/Views"]
margin_left = 8.0
margin_top = 35.0
margin_right = 48.0
margin_bottom = 75.0

[node name="Moving" type="Control" parent="UI/Views"]
margin_left = 8.0
margin_top = 35.0
margin_right = 48.0
margin_bottom = 75.0

[node name="FixedLateral" type="Control" parent="UI/Views"]
margin_left = 8.0
margin_top = 35.0
margin_right = 48.0
margin_bottom = 75.0

[node name="MaxHeightLabel" type="Label" parent="UI/Views/FixedLateral"]
margin_top = 1.0
margin_right = 81.0
margin_bottom = 15.0
text = "Max height"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="MaxHeightHSlider" type="HSlider" parent="UI/Views/FixedLateral"]
margin_left = 101.0
margin_top = 1.0
margin_right = 244.0
margin_bottom = 17.0
min_value = 1.5
max_value = 10.0
step = 0.1
value = 1.5
__meta__ = {
"_edit_use_anchors_": false
}

[node name="MovingLateral" type="Control" parent="UI/Views"]
margin_left = 8.0
margin_top = 35.0
margin_right = 48.0
margin_bottom = 75.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="MaxHeightLabel" type="Label" parent="UI/Views/MovingLateral"]
margin_top = 1.0
margin_right = 81.0
margin_bottom = 15.0
text = "Max height"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="MaxHeightHSlider" type="HSlider" parent="UI/Views/MovingLateral"]
margin_left = 101.0
margin_top = 1.0
margin_right = 244.0
margin_bottom = 17.0
min_value = 1.5
max_value = 10.0
step = 0.1
value = 1.5
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Intercept" type="Control" parent="UI/Views"]
margin_left = 8.0
margin_top = 35.0
margin_right = 48.0
margin_bottom = 75.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="GravitySwitcher" type="HBoxContainer" parent="UI"]
margin_right = 40.0
margin_bottom = 40.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Toggle" type="CheckButton" parent="UI/GravitySwitcher"]
margin_right = 76.0
margin_bottom = 40.0

[node name="Label" type="Label" parent="UI/GravitySwitcher"]
modulate = Color( 0.145098, 0.145098, 0.164706, 1 )
margin_left = 80.0
margin_top = 13.0
margin_right = 149.0
margin_bottom = 27.0
text = "Flip gravity"

[node name="ViewSwitcher" type="Control" parent="UI"]
anchor_right = 1.0
margin_bottom = 37.0
mouse_filter = 2
__meta__ = {
"_edit_use_anchors_": false
}

[node name="HBoxContainer" type="HBoxContainer" parent="UI/ViewSwitcher"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -221.5
margin_top = -10.0
margin_right = 221.5
margin_bottom = 10.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Range" type="Button" parent="UI/ViewSwitcher/HBoxContainer"]
margin_right = 50.0
margin_bottom = 20.0
toggle_mode = true
text = "Range"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Fixed" type="Button" parent="UI/ViewSwitcher/HBoxContainer"]
margin_left = 54.0
margin_right = 100.0
margin_bottom = 20.0
toggle_mode = true
text = "Fixed"

[node name="Moving" type="Button" parent="UI/ViewSwitcher/HBoxContainer"]
margin_left = 104.0
margin_right = 162.0
margin_bottom = 20.0
toggle_mode = true
text = "Moving"

[node name="FixedLateral" type="Button" parent="UI/ViewSwitcher/HBoxContainer"]
margin_left = 166.0
margin_right = 259.0
margin_bottom = 20.0
toggle_mode = true
text = "Fixed Lateral"

[node name="MovingLateral" type="Button" parent="UI/ViewSwitcher/HBoxContainer"]
margin_left = 263.0
margin_right = 368.0
margin_bottom = 20.0
toggle_mode = true
text = "Moving Lateral"

[node name="Intercept" type="Button" parent="UI/ViewSwitcher/HBoxContainer"]
margin_left = 372.0
margin_right = 443.0
margin_bottom = 20.0
toggle_mode = true
text = "Intercept"

[node name="Message" type="RichTextLabel" parent="UI"]
visible = false
anchor_left = 0.5
anchor_top = 1.0
anchor_right = 0.5
anchor_bottom = 1.0
margin_left = -65.5
margin_top = -20.0
margin_right = 65.5
bbcode_enabled = true
bbcode_text = "[color=#ff0000]Cannot reach target[/color]"
text = "Cannot reach target"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Intercept" type="Sprite" parent="UI"]
scale = Vector2( 0.5, 0.5 )
texture = ExtResource( 3 )

[node name="VisibilityNotifier" type="VisibilityNotifier" parent="UI/Intercept"]

[node name="TimeLabel" type="Label" parent="UI/Intercept"]
margin_left = 37.3997
margin_top = -12.2725
margin_right = 141.4
margin_bottom = 1.72753
rect_scale = Vector2( 2, 2 )
text = "10.2"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Floor" type="StaticBody" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1, 0 )

[node name="MeshInstance" type="MeshInstance" parent="Floor"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0 )
mesh = SubResource( 2 )
skeleton = NodePath("../..")
material/0 = null

[node name="CollisionShape" type="CollisionShape" parent="Floor"]
shape = SubResource( 3 )

[node name="Player" type="Spatial" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0 )

[node name="MeshInstance" type="MeshInstance" parent="Player"]
transform = Transform( 1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, 0, 0, 0 )
mesh = SubResource( 5 )
skeleton = NodePath("../..")
material/0 = null

[node name="Target" type="StaticBody" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, -10 )

[node name="MeshInstance" type="MeshInstance" parent="Target"]
mesh = SubResource( 7 )
material/0 = null

[node name="AnimationPlayer" type="AnimationPlayer" parent="Target"]
anims/Patrol = SubResource( 8 )

[node name="CollisionShape" type="CollisionShape" parent="Target"]
shape = SubResource( 12 )

[node name="Camera" type="Camera" parent="."]
transform = Transform( 0.866025, 0.17101, -0.469846, 0, 0.939693, 0.34202, 0.5, -0.296198, 0.813798, -7.63025, 5.05004, 1.8002 )
environment = ExtResource( 1 )

[node name="Range" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.1, 0 )
mesh = SubResource( 11 )
skeleton = NodePath("../Player")
material/0 = null

[node name="Aim" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.1, -4.33813 )
mesh = SubResource( 15 )
skeleton = NodePath("../Player")
material/0 = null

[node name="DirectionalLight" type="DirectionalLight" parent="."]
transform = Transform( 1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, 0, 4.79408, 0 )
shadow_enabled = true

[node name="GravityField" type="Area" parent="."]
space_override = 3
gravity_vec = Vector3( -1, 0, 0 )

[node name="CollisionShape" type="CollisionShape" parent="GravityField"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 50, 0 )
shape = SubResource( 17 )
disabled = true

[connection signal="value_changed" from="UI/Views/ProjectileSpeedHSlider" to="." method="_on_ProjectileSpeedHSlider_value_changed"]
[connection signal="value_changed" from="UI/Views/Range/InitialHeightHSlider" to="." method="_on_InitialHeightHSlider_value_changed"]
[connection signal="toggled" from="UI/GravitySwitcher/Toggle" to="." method="_on_GravitySwitcher_toggled"]
[connection signal="button_up" from="UI/ViewSwitcher/HBoxContainer/Range" to="." method="_on_Range_view_up"]
[connection signal="button_up" from="UI/ViewSwitcher/HBoxContainer/Fixed" to="." method="_on_Fixed_view_up"]
[connection signal="button_up" from="UI/ViewSwitcher/HBoxContainer/Moving" to="." method="_on_Moving_view_up"]
[connection signal="button_up" from="UI/ViewSwitcher/HBoxContainer/FixedLateral" to="." method="_on_FixedLateral_view_up"]
[connection signal="button_up" from="UI/ViewSwitcher/HBoxContainer/MovingLateral" to="." method="_on_MovingLateral_view_up"]
[connection signal="button_up" from="UI/ViewSwitcher/HBoxContainer/Intercept" to="." method="_on_Intercept_view_up"]
